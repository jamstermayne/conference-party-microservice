name: Deploy to Firebase

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci
      
      - name: Lint functions
        run: cd functions && npm run lint
        continue-on-error: true
      
      - name: Build functions
        run: cd functions && npm run build
      
      - name: Build app
        run: npm run build
        continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci
      
      - name: Build functions
        run: cd functions && npm run build
      
      - name: Build app
        run: npm run build
        continue-on-error: true
      
      # Try Firebase action first (requires FIREBASE_SERVICE_ACCOUNT_CONFERENCE_PARTY_APP secret)
      - name: Deploy to Firebase
        id: firebase_deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CONFERENCE_PARTY_APP }}'
          channelId: live
          projectId: conference-party-app
        continue-on-error: true
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
      
      # If the above fails, provide instructions
      - name: Deployment Instructions
        if: steps.firebase_deploy.outcome == 'failure'
        run: |
          echo "❌ Deployment failed - Missing GitHub Secret"
          echo ""
          echo "To fix deployment, add the FIREBASE_SERVICE_ACCOUNT_CONFERENCE_PARTY_APP secret:"
          echo ""
          echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "2. Click 'New repository secret'"
          echo "3. Name: FIREBASE_SERVICE_ACCOUNT_CONFERENCE_PARTY_APP"
          echo "4. Value: Paste the service account JSON from Firebase Console"
          echo ""
          echo "To get the service account JSON:"
          echo "1. Go to Firebase Console > Project Settings > Service Accounts"
          echo "2. Click 'Generate new private key'"
          echo "3. Copy the entire JSON content"
          echo ""
          exit 1